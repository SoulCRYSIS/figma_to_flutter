name: Upload Design Tokens

on:
  workflow_dispatch:
    inputs:
      folder-url:
        description: 'URL to zip file of your folder'
        required: true

jobs:
  update-folder:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Download folder ZIP
        run: |
          URL="${{ github.event.inputs.folder-url }}"
          
          # Check if it's a Google Drive URL and extract file ID
          if [[ $URL == *"drive.google.com"* ]]; then
            FILE_ID=$(echo $URL | sed -n 's/.*\/d\/\([a-zA-Z0-9_-]*\).*/\1/p')
            if [ ! -z "$FILE_ID" ]; then
              echo "Detected Google Drive URL, using file ID: $FILE_ID"
              # Use Google Drive direct download URL
              DOWNLOAD_URL="https://drive.google.com/uc?export=download&id=$FILE_ID"
              
              # First attempt - for small files
              curl -L "$DOWNLOAD_URL" -o uploaded.zip
              
              # Check if we got a virus scan warning (large files)
              if grep -q "Google Drive - Virus scan warning" uploaded.zip 2>/dev/null; then
                echo "Large file detected, handling virus scan warning..."
                # Get the confirmation token
                CONFIRM=$(curl -c cookies.txt -s -L "$DOWNLOAD_URL" | grep -o 'confirm=[^&]*' | head -1)
                # Download with confirmation
                curl -L -b cookies.txt "${DOWNLOAD_URL}&${CONFIRM}" -o uploaded.zip
                rm -f cookies.txt
              fi
            else
              echo "Could not extract file ID from Google Drive URL"
              exit 1
            fi
          else
            # Regular URL download
            curl -L "$URL" -o uploaded.zip
          fi
          
          # Verify it's a valid zip file
          if ! unzip -t uploaded.zip >/dev/null 2>&1; then
            echo "Downloaded file is not a valid ZIP archive"
            echo "File size: $(wc -c < uploaded.zip) bytes"
            echo "File type: $(file uploaded.zip)"
            exit 1
          fi
          
          unzip -o uploaded.zip -d extracted

      - name: Remove and copy
        run: |
          rm -rf "lib/design_tokens"
          mkdir -p "lib/design_tokens"
          mv extracted/* "lib/design_tokens/"

      - name: Commit folder update
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@users.noreply.github.com"
          git checkout -b update-folder-${{ github.run_number }}
          git add "lib/design_tokens"
          git commit -m "Replace folder lib/design_tokens via workflow"
        
      - name: Push and create PR
        uses: peter-evans/create-pull-request@v6
        with:
          branch: update-folder-${{ github.run_number }}
          commit-message: "Replace folder lib/design_tokens"
          title: "📁 Update folder lib/design_tokens"
          body: "Automated update via workflow"
